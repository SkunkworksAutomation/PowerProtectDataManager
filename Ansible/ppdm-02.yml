---
- name: "PowerProtect Data Manager proxy deployment demo"
  hosts: "{{ ansible_play_batch }}"
  collections:
    - community.general
  become: no
  gather_facts: false
 
  vars:
  vars_files:
    - vars/credentials.yml

  tasks:
# WAIT FOR HTTPS RESPONSE FROM POWERPROTECT DATA MANAGER  
  - name: "( {{ppdm_host}} ): Wait for HTTPS connectivity"
    wait_for:
      host: "{{ppdm_host}}.{{ad_domain}}"
      port: 443
      state: started
      delay: 1
      sleep: 60
      timeout: 600
    register: waitforppdm

# AUTHENTICATE TO THE POWERPROTECT REST API & GRAB ACCESS TOKEN
  - name: "( {{ppdm_host}} ): Authenticate to PowerProtect DM REST API"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/login
      method: POST
      validate_certs: no
      return_content: yes
      body_format: json
      body:
        username: "{{ppdm_id}}"
        password: "{{ppdm_pwd}}"
      status_code: 200
    register: token
    
  - name:
    debug:
      var: token.json.access_token

# GET THE ESX HOST INFO
  - name: "( {{ppdm_host}} ): Get the esx host information"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/hosts?filter=name%20eq%20%22{{vcenter_esx}}%22
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
        Content-Type: "application/json"
      method: GET
      validate_certs: no
      return_content: yes
      body_format: json
    register: esxhosts

  - name:
    debug:
      var: esxhosts.json

# GET THE DATASTORE INFO
  - name: "( {{ppdm_host}} ): Get the datastore information"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/vcenter/{{esxhosts.json.content[0].inventorySourceId}}/data-stores/{{esxhosts.json.content[0].details.esxHost.hostMoref}}
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
        Content-Type: "application/json"
      method: GET
      validate_certs: no
      return_content: yes
      body_format: json
    register: datastores

  - name:
    debug:
      var: datastores.json

# GET PROTECTION ENGINE ID
  - name: "( {{ppdm_host}} ): Get the protection engine id"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/protection-engines?filter=type%20eq%20%22VPE%22
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
        Content-Type: "application/json"
      method: GET
      validate_certs: no
      return_content: yes
      body_format: json
    register: engine

  - name:
    debug:
      var: engine.json

# DEPLOY A VPROXY
  - name: "( {{ppdm_host}} ): Deploying {{ppdm_proxy1}}"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/protection-engines/{{ engine.json.content[0].id }}/proxies
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
        Content-Type: "application/json"
      method: POST
      validate_certs: no
      return_content: yes
      body_format: json
      body: |
         {
            "Config": {
                "ProxyType": "External",
                "DeployProxy": true,
                "Port": 9090,
                "Disabled": false,
                "MORef": "",
                "Credential": {
                    "Type": "ObjectId"
                },
                "AdvancedOptions": {
                    "TransportSessions": {
                        "Mode": "HotaddPreferred",
                        "UserDefined": true
                    }
                },
                "SupportedProtectionTypes": [
                    "VM"
                ],
                "ProxyDeploymentConfig": {
                    "Location": {
                        "HostMoref": "{{ (esxhosts.json | json_query(query1)).split(':') | last }}",
                        "DatastoreMoref": "{{ (datastores.json | json_query(query3)).split(':') | last }}",
                        "NetworkMoref": "{{ esxhosts.json | json_query(query2) }}"
                    },
                    "Timezone": "",
                    "AdditionalVMNetworks": [],
                    "Fqdn": "{{ppdm_proxy1}}.{{ad_domain}}",
                    "IpAddress": "{{ppdm_proxy1_ip}}",
                    "NetMask": "{{ppdm_netmask}}",
                    "Gateway": "{{ppdm_gateway}}",
                    "PrimaryDns": "{{ppdm_dns}}",
                    "Dns": "{{ppdm_dns}}",
                    "IPProtocol": "IPv4"
                },
                "VimServerRef": {
                    "Type": "ObjectId",
                    "ObjectId": "{{esxhosts.json.content[0].inventorySourceId}}"
                },
                "HostName": "{{ppdm_proxy1}}.{{ad_domain}}"
            }
          }
      status_code: 202   
    vars:
      query1: content[0] | details | esxHost | hostMoref
      query2: content[0] | details | esxHost | networks[?name=='{{vcenter_network}}'] | [0].moref
      query3: datastores[?name == '{{vcenter_ds}}'] | [0].moref
    register: proxy1

# DEPLOY A VPROXY
  - name: "( {{ppdm_host}} ): Deploying {{ppdm_proxy2}}"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/protection-engines/{{ engine.json.content[0].id }}/proxies
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
        Content-Type: "application/json"
      method: POST
      validate_certs: no
      return_content: yes
      body_format: json
      body: |
         {
            "Config": {
                "ProxyType": "External",
                "DeployProxy": true,
                "Port": 9090,
                "Disabled": false,
                "MORef": "",
                "Credential": {
                    "Type": "ObjectId"
                },
                "AdvancedOptions": {
                    "TransportSessions": {
                        "Mode": "HotaddPreferred",
                        "UserDefined": true
                    }
                },
                "SupportedProtectionTypes": [
                    "VM"
                ],
                "ProxyDeploymentConfig": {
                    "Location": {
                        "HostMoref": "{{ (esxhosts.json | json_query(query1)).split(':') | last }}",
                        "DatastoreMoref": "{{ (datastores.json | json_query(query3)).split(':') | last }}",
                        "NetworkMoref": "{{ esxhosts.json | json_query(query2) }}"
                    },
                    "Timezone": "",
                    "AdditionalVMNetworks": [],
                    "Fqdn": "{{ppdm_proxy2}}.{{ad_domain}}",
                    "IpAddress": "{{ppdm_proxy2_ip}}",
                    "NetMask": "{{ppdm_netmask}}",
                    "Gateway": "{{ppdm_gateway}}",
                    "PrimaryDns": "{{ppdm_dns}}",
                    "Dns": "{{ppdm_dns}}",
                    "IPProtocol": "IPv4"
                },
                "VimServerRef": {
                    "Type": "ObjectId",
                    "ObjectId": "{{esxhosts.json.content[0].inventorySourceId}}"
                },
                "HostName": "{{ppdm_proxy2}}.{{ad_domain}}"
            }
          }
      status_code: 202   
    vars:
      query1: content[0] | details | esxHost | hostMoref
      query2: content[0] | details | esxHost | networks[?name=='{{vcenter_network}}'] | [0].moref
      query3: datastores[?name == '{{vcenter_ds}}'] | [0].moref
    register: proxy2

# LOGOUT OF THE REST API
  - name: "( {{ppdm_host}}): Logout of the REST API"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/logout
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
        Content-Type: "application/json"
      method: POST
      validate_certs: no
      return_content: yes
      body_format: json
      status_code: 204
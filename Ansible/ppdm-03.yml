---
- name: "PowerProtect Data Manager search engine deployment demo"
  hosts: "{{ ansible_play_batch }}"
  collections:
    - community.general
  become: no
  gather_facts: false
 
  vars:
  vars_files:
    - vars/credentials.yml

  tasks:
# WAIT FOR HTTPS RESPONSE FROM POWERPROTECT DATA MANAGER  
  - name: "( {{ppdm_host}} ): Wait for HTTPS connectivity"
    wait_for:
      host: "{{ppdm_host}}.{{ad_domain}}"
      port: 443
      state: started
      delay: 1
      sleep: 60
      timeout: 600
    register: waitforppdm

# AUTHENTICATE TO THE POWERPROTECT REST API & GRAB ACCESS TOKEN
  - name: "( {{ppdm_host}} ): Authenticate to PowerProtect DM REST API"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/login
      method: POST
      validate_certs: no
      return_content: yes
      body_format: json
      body:
        username: "{{ppdm_id}}"
        password: "{{ppdm_pwd}}"
      status_code: 200
    register: token
    
  - name: "( {{ppdm_host}} ): Display bearer token"
    debug:
      var: token.json.access_token

# GET THE ESX HOST INFO
  - name: "( {{ppdm_host}} ): Get the esx host information"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/hosts?filter=name%20eq%20%22{{vcenter_esx}}%22
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
        Content-Type: "application/json"
      method: GET
      validate_certs: no
      return_content: yes
      body_format: json
    register: esxhosts

  - name:
    debug:
      var: esxhosts.json

# GET THE DATASTORE INFO
  - name: "( {{ppdm_host}} ): Get the datastore information"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/vcenter/{{esxhosts.json.content[0].inventorySourceId}}/data-stores/{{esxhosts.json.content[0].details.esxHost.hostMoref}}
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
        Content-Type: "application/json"
      method: GET
      validate_certs: no
      return_content: yes
      body_format: json
    register: datastores

  - name:
    debug:
      var: datastores.json

# GET SEARCH CLUSTER ID
  - name: "( {{ppdm_host}} ): Get the search cluster id"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/search-clusters
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
        Content-Type: "application/json"
      method: GET
      validate_certs: no
      return_content: yes
      body_format: json
    register: search

# DEPLOY A SEARCH NODE
  - name: "( {{ppdm_host}} ): Deploying {{ppdm_searchnode1}}.{{ad_domain}}"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/search-clusters/{{search.json.content[0].id}}/nodes
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
        Content-Type: "application/json"
      method: POST
      validate_certs: no
      return_content: yes
      body_format: json
      body: |
          {
            "hostName": "{{ppdm_searchnode1}}.{{ad_domain}}",
            "inventorySourceId": "{{esxhosts.json.content[0].inventorySourceId}}",
            "deploymentConfig": {
                "fqdn": "{{ppdm_searchnode1}}.{{ad_domain}}",
                "ipAddress": "{{ppdm_searchnode1_ip}}",
                "dns": "{{ppdm_dns}}",
                "gateway": "{{ppdm_gateway}}",
                "netMask": "{{ppdm_netmask}}",
                "networkMoref": "{{ esxhosts.json | json_query(query2) }}",
                "ipProtocol": "",
                "location": {
                    "datastoreMoref": "{{ (datastores.json | json_query(query3)).split(':') | last }}",
                    "hostMoref": "{{ (esxhosts.json | json_query(query1)).split(':') | last }}"
                },
                "additionalVMNetworks": [],
                "iPProtocol": "IPv4"
            }
          }
      status_code: 202   
    vars:
      query1: content[0] | details | esxHost | hostMoref
      query2: content[0] | details | esxHost | networks[?name=='{{vcenter_network}}'] | [0].moref
      query3: datastores[?name == '{{vcenter_ds}}'] | [0].moref
    register: node1

  - name:
    debug:
      var: node1.json

# GET THE SEARCH NODE DEPLOYMENT STATUS
  - name: "( {{ppdm_host}} ): Check the search node deployment status to see if its complete"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/activities/{{ node1.json.activityId }}
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
        Content-Type: "application/json"
      method: GET
      validate_certs: no
      return_content: yes
      body_format: json
    register: node1status
    until: node1status.status == 200 and node1status.json.progress == 100 and node1status.json.state == 'COMPLETED'
    retries: 180
    delay: 10

  - name:
    debug:
      var: node1status.json

# LOGOUT OF THE REST API
  - name: "( {{ppdm_host}}): Logout of the REST API"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/logout
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
        Content-Type: "application/json"
      method: POST
      validate_certs: no
      return_content: yes
      body_format: json
      status_code: 204